{"pageProps":{"title":"Algorithmic Patterns: Sliding Window","description":"Algorithmic Patterns: Sliding Window is a method, strategy, or technique of solving a problem","date":"2020-02-19T14:32:44.228Z","lastmod":"2020-02-19T14:32:44.228Z","slug":"algorithmic-patterns-sliding-window","categories":["Algorithm"],"tags":["Algorithm","JavaScript"],"thumbnail":"/assets/algorithm.svg","image":"/assets/algorithm.svg","source":"","content":"\n\nWhen you start to prepare for interviews it is good to know common strategis to solve problem. You may find that several\nsolution strategies for given problem, but a good programmer is one who is proficient at examining the problem to be solved and identifying the appropriate algorithmic technique to use.\nWe are going to review pattern called **Sliding Window** in this short article. I will try to give you at least a high level overview of Sliding Window stratege. \nCurrently, I have solved around 400 problems in the [leetcode](https://leetcode.com) and 200 problems in the [hackerrank](https://hackerrank.com) and time to time participate in contests. I usually solve 3 problems in a contest and sometimes 4 problems. Lets come back to the topic.\n\nGenerate problem statement for this pattern starts:\n\n> Given an array(list), find the average(maximum|minimum|sum) of all contiguous subarrays of size(adds up to) ‘K’\n\n\nAnd the approach for this is\n\n> Keep track of any consecutive subarrays of size N. You can visualize each contiguous subarray as a sliding window of N elements add/remove as needed\n\nExample: Given an array, find the average of all contiguous subarrays of size 3 in it.\n\n```JavaScript\nfunction find_averages_of_subarrays(arr, k) {\n  const result = [];\n  let sum = 0;\n  let start = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i]; // add the next element\n    // slide the window, we don't need to slide if we've not hit the required window size of 'k'\n    if (i >= k - 1) {\n      result.push(sum / k); // calculate the average\n      sum -= arr[start]; // subtract the element from begining\n      start++; // slide the window ahead\n    }\n  }\n\n  return result;\n}\n```\n\n\n\n\nIcons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>","permalink":"/post/algorithmic-patterns-sliding-window","site":{"categories":[{"name":"Algorithm","count":1},{"name":"Design","count":10},{"name":"Development","count":38},{"name":"interview","count":2},{"name":"intreview","count":2},{"name":"Mobile-Development","count":1},{"name":"Resources","count":15},{"name":"System Design","count":2},{"name":"System-Design","count":2},{"name":"Tools","count":1},{"name":"Web Management","count":5},{"name":"Web-Development","count":37}],"tags":[{"name":".NET","count":2},{"name":"Algorithm","count":1},{"name":"AngularJS","count":4},{"name":"CSS","count":7},{"name":"HTML","count":4},{"name":"interview","count":5},{"name":"interviews","count":1},{"name":"intreview","count":2},{"name":"JavaScript","count":27},{"name":"Mobile","count":1},{"name":"Node.JS","count":8},{"name":"React","count":1},{"name":"Tools","count":1}]}},"__N_SSG":true}